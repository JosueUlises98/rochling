spring:
  config:
    activate:
      on-profile: prod

app:
  elasticsearch:
    index-prefix: ${ELASTICSEARCH_INDEX_PREFIX}
    hosts: ${ELASTICSEARCH_HOSTS}
    password: ${ELASTICSEARCH_PASSWORD}
    bulk-size: 2000
    flush-interval: 5
    ssl-enabled: true
    number-of-shards: ${ELASTICSEARCH_SHARDS}
    number-of-replicas: ${ELASTICSEARCH_REPLICAS}
    retry:
      max-attempts: 5
      initial-interval: 1000
      multiplier: 2.0
      max-interval: 30000
  file-config:
    base-path: ${LOG_BASE_DIR}
    max-file-size: ${LOG_MAX_FILE_SIZE}
    max-history: ${LOG_MAX_HISTORY}
    compress-backups: true
    root-level: ${LOG_LEVEL}
    application-level: INFO
  security:
    enable-audit: true
    audit-log-path: ${LOG_BASE_DIR}/audit
    mask-sensitive-data: true
  performance:
    enable-metrics: true
    buffer-size: 16384
    queue-size: 1024
    async-logging: true

server:
  port: ${SERVER_PORT}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH}
  tomcat:
    max-threads: ${SERVER_TOMCAT_MAX_THREADS}
    min-spare-threads: ${SERVER_TOMCAT_MIN_SPARE_THREADS}
    max-http-header-size: ${MAX_HTTP_HEADER_SIZE}
  ssl:
    enabled: true
    key-store: ${SSL_KEYSTORE_PATH}
    key-store-password: ${SSL_KEYSTORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: ${SSL_KEY_ALIAS}

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: never
      probes:
        enabled: true
  metrics:
    tags:
      application: ${SERVICE_NAME}
    export:
      prometheus:
        enabled: true
      elastic:
        enabled: true
        step: 1m
        index: metrics-prod

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 100
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30000
  ratelimiter:
    configs:
      default:
        limit-for-period: 1000
        limit-refresh-period: 1s
        timeout-duration: 500ms

logging:
  level:
    root: ${LOG_LEVEL}
    ${SERVICE_GROUP}: INFO
    org.springframework: WARN
  pattern:
    console: ${LOG_PATTERN}
    file: ${LOG_PATTERN}
  logback:
    rollingpolicy:
      max-history: ${LOG_MAX_HISTORY}
      max-file-size: ${LOG_MAX_FILE_SIZE}
      total-size-cap: ${LOG_TOTAL_SIZE_CAP}

cache:
  caffeine:
    spec: maximumSize=10000,expireAfterWrite=1h

info:
  app:
    name: ${SERVICE_NAME}
    version: ${SERVICE_VERSION}
    description: ${SERVICE_DESCRIPTION}
    group: ${SERVICE_GROUP}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type
  exposed-headers: X-Total-Count
  allow-credentials: true
  max-age: 3600

security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 86400000
    refresh-token:
      expiration: 604800000

monitoring:
  newrelic:
    enabled: true
    license-key: ${NEW_RELIC_LICENSE_KEY}
  datadog:
    enabled: true
    api-key: ${DATADOG_API_KEY}

cdn:
  enabled: true
  base-url: ${CDN_BASE_URL}
  access-key: ${CDN_ACCESS_KEY}
  secret-key: ${CDN_SECRET_KEY}

redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
  password: ${REDIS_PASSWORD}
  timeout: 2000
  database: 0