# Configuración Base de Spring
spring:
  application:
    name: ${SERVICE_NAME}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=3600s
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    date-format: yyyy-MM-dd HH:mm:ss
  servlet:
    multipart:
      enabled: true
      max-file-size: ${MAX_HTTP_HEADER_SIZE}
      max-request-size: ${MAX_HTTP_HEADER_SIZE}
  jvm:
    args: ${JAVA_OPTS}
    debug: ${JAVA_DEBUG_OPTS}

# Configuración de la Aplicación
app:
  elasticsearch:
    hosts: ${ELASTICSEARCH_HOSTS}
    index-prefix: ${ELASTICSEARCH_INDEX_PREFIX}
    template-name: ${ELASTICSEARCH_TEMPLATE_NAME}
    ilm-policy: ${ELASTICSEARCH_ILM_POLICY}
    number-of-shards: ${ELASTICSEARCH_SHARDS}
    number-of-replicas: ${ELASTICSEARCH_REPLICAS}
    refresh-interval: ${ELASTICSEARCH_REFRESH_INTERVAL}
    password: ${ELASTICSEARCH_PASSWORD}
    bulk-size: 1000
    flush-interval: 5
    ssl-enabled: false
    retry:
      max-attempts: 3
      initial-interval: 1000
      multiplier: 2.0
      max-interval: 10000
  logging-service:
    enabled: true
    api-key-header: "X-API-Key"
    api-keys: ${LOGGING_API_KEYS}
    allowed-origins: ${ALLOWED_ORIGINS:*}
    processing:
      async:
        enabled: true
        core-pool-size: 4
        max-pool-size: 8
        queue-capacity: 10000
      batch:
        enabled: true
        size: 1000
        timeout: 5000
    index-management:
      enabled: true
      cleanup-cron: "0 0 1 * * ?"
      retention-days: 90
      hot-phase-days: 7
      warm-phase-days: 30
    field-config:
      required:
        - timestamp
        - serviceName
        - level
        - message
      masked:
        - password
        - token
        - creditCard
      max-message-size: 32000
      max-stacktrace-lines: 50
  file-config:
    base-path: ${LOG_BASE_DIR}
    log-pattern: ${LOG_PATTERN}
    max-file-size: ${LOG_MAX_FILE_SIZE}
    max-history: ${LOG_MAX_HISTORY}
    compress-backups: true
    name-pattern: "%d{yyyy-MM-dd}.log"
    root-level: ${LOG_LEVEL}
    application-level: ${LOG_LEVEL}
  security:
    enable-audit: true
    audit-log-path: ${LOG_BASE_DIR}/audit
    sensitive-fields:
      - password
      - token
      - creditCard
    mask-sensitive-data: true
  performance:
    enable-metrics: true
    buffer-size: 8192
    queue-size: 512
    async-logging: true

# Configuración del Servidor
server:
  port: ${SERVER_PORT}
  tomcat:
    max-threads: ${SERVER_TOMCAT_MAX_THREADS}
    min-spare-threads: ${SERVER_TOMCAT_MIN_SPARE_THREADS}
    max-http-header-size: ${MAX_HTTP_HEADER_SIZE}
    max-connections: 10000
    connection-timeout: 5000
    accesslog:
      enabled: true
      directory: ${LOG_BASE_DIR}/access
      prefix: access_log
      suffix: .log
      pattern: ${LOG_PATTERN}
  compression:
    enabled: true
    mime-types:
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
    min-response-size: 2048
  http2:
    enabled: true
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH}
    session:
      timeout: 30m

# Configuración de Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - metrics
          - loggers
          - info
          - prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${SERVICE_NAME}
    export:
      prometheus:
        enabled: true
  info:
    git:
      mode: full

# Configuración de Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 100
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
        permitted-number-of-calls-in-half-open-state: 10
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1000
  ratelimiter:
    configs:
      default:
        limit-for-period: 100
        limit-refresh-period: 1s
        timeout-duration: 0s

# Configuración de Feign
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
  compression:
    request:
      enabled: true
    response:
      enabled: true

# Configuración de Logging
logging:
  file:
    path: ${LOG_BASE_DIR:/var/log/rochling/logging-service}
  level:
    root: ${LOG_LEVEL:INFO}
    ${SERVICE_GROUP}: ${LOG_LEVEL:INFO}
    org.springframework: WARN
    org.elasticsearch: WARN
  logback:
    rollingpolicy:
      max-history: ${LOG_MAX_HISTORY}
      max-file-size: ${LOG_MAX_FILE_SIZE}
      total-size-cap: ${LOG_TOTAL_SIZE_CAP}

# Información de la Aplicación
info:
  app:
    name: ${SERVICE_NAME}
    version: ${SERVICE_VERSION}
    description: ${SERVICE_DESCRIPTION}
    group: ${SERVICE_GROUP}
  java:
    version: ${java.version}
  spring:
    profiles:
      active: ${SPRING_PROFILES_ACTIVE}